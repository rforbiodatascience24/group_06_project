---
title: "Magdas_version"
format: html
editor: visual
---

```{r}
library("tidyverse")
```

```{r}
#loading data
df_hsc <- read_csv2("local_data/group6_data_HSC_Report.csv", na = ("NaN"))
df_clp <- read_csv2("local_data/group6_data_CLP_Report.csv", na = ("NaN"))
df_cmp <- read_csv2("local_data/group6_data_CMP_Report.csv", na = ("NaN"))
df_gmp <- read_csv2("local_data/group6_data_GMP_Report.csv", na = ("NaN"))
df_mep <- read_csv2("local_data/group6_data_MEP_Report.csv", na = ("NaN"))
```

```{r}
#renaming colnames
df_hsc <- df_hsc |> 
  rename(x1 = X.1..HSC_mBM_500c_49.raw.PG.Quantity,
         x2 = X.2..HSC_mBM_500c_50.raw.PG.Quantity,
         x3 = X.3..HSC_mBM_500c_51.raw.PG.Quantity,
         x4 = X.4..HSC_mBM_500c_56.raw.PG.Quantity)
```

```{r}
#Create a function to rename colnames
rename_cols <- function(data) {
  data |> 
    rename(x1 = starts_with("X.1"),
         x2 = starts_with("X.2"),
         x3 = starts_with("X.3"),
         x4 = starts_with("X.4"),
         x5 = starts_with("X.5"))
}
```

```{r}
#pivot longer the data
#Tried making a function for this but I realized they need to have different variable names based on the cell type

df_long_hsc <- rename_cols(df_hsc) |> 
  pivot_longer(
    cols = !starts_with("PG"), 
    names_to = "replicate", 
    values_to = "hsc_intensity"
  )
df_long_clp <- rename_cols(df_clp) |> 
  pivot_longer(
    cols = !starts_with("PG"), 
    names_to = "replicate", 
    values_to = "clp_intensity"
  )
df_long_mep <- rename_cols(df_mep) |> 
  pivot_longer(
    cols = !starts_with("PG"), 
    names_to = "replicate", 
    values_to = "mep_intensity"
  )
df_long_gmp <- rename_cols(df_gmp) |> 
  pivot_longer(
    cols = !starts_with("PG"), 
    names_to = "replicate", 
    values_to = "gmp_intensity"
  )
df_long_cmp <- rename_cols(df_cmp) |> 
  pivot_longer(
    cols = !starts_with("PG"), 
    names_to = "replicate", 
    values_to = "cmp_intensity"
  )


```

```{r}
#function that pivots longer the data - problem with this function is how to make the intensity unique based on the type of cell...
proteomics_pivot_longer <- function(data){
  data |> 
    pivot_longer(
    cols = !starts_with("PG"), 
    names_to = "replicate",
    values_to = "intensity") |> 
    mutate(celltype = )
}
```

```{r}
#joining dataframes after renaming columns and pivoting longer
#This is assuming that replicat x1 is the same sample for the five different cell types...
#Arne said the replicates have nothing to do with oneanother which makes this dataframe useless
df_ful <- df_long_hsc |> 
  full_join(df_long_clp, by=c("PG.ProteinGroups", "PG.Genes")) |> 
  full_join(df_long_cmp, by=c("PG.ProteinGroups", "PG.Genes")) |> 
  full_join(df_long_mep, by=c("PG.ProteinGroups", "PG.Genes")) |>
  full_join(df_long_gmp, by=c("PG.ProteinGroups", "PG.Genes")) |> 
  pivot_longer(
    cols = ends_with("intensity"),
    names_to = "cell_type",
    values_to = "intensity"
  )
```

#I would like to create a variable called "cell type" that contains either cmp gmp etc depending on cell type.
