---
title: "05_analysis"
format: html
editor: visual
---

## Library

```{r}
library(tidyverse)
library(broom)
```

## Load Data

```{r}
df_no_na_long <- read_tsv(file = here("data/03_dat_aug_long_1.tsv"))
```

## Data Analysis

### PCA

### Volcano plots (pairwise)

Creating a function that finds the p-value based on the students t.test. This 'manual' pvalue computation is used because a dataframe that consists of standard deviations and mean values.

```{r}
#no of replicates
n <- 4

##Compute the p-value as a tail propability in the t-distribution. pvalue=2*P(T>|tobs|). pt is the cdf distribution, so the propability that T is smaller than or equal to tobs is given by

pval <- function(mu1,mu2,n1,n2,s1,s2){
  tobs <- ((mu1-mu2)-0)/sqrt((s1^2)/n1+(s2^2)/n2)
  df <- (((s1^2)/n1+(s2^2)/n2)^2)/((((s1^2)/n1)^2)/(n1-1)+(((s2^2)/n2)^2)/(n2-1))
  pvalue <- 2*(1-pt(abs(tobs), df=df))
  return(pvalue)
  }

```

```{r}
# Antonio pivoted wider and creatd a log2foldchange
df_mean_intensitities |> 
  select(!sd) |> 
  pivot_wider(names_from = cell_type, values_from = mean) |> 
  select(!gmp & !hsc & !mep) |> 
  mutate(fold = cmp/clp) 

```

```{r}
# Histogram that shows distribution of the fold
ggplot(test_plot, aes(x=fold))+
  geom_histogram()+
  scale_x_continuous(limits = c(0.75, 1.25))
```

## Volcano plots

Genes with statistically significant differential expression lie above a horizontal threshold. Closer to zero indicates less change while moving away from zero in either direction indicates more change. Volcano plots provide an effective means for visualizing the direction, magnitude, and significance of changes in gene expression.Â 

```{r}
test_plot <- df_mean_intensitities |> 
pivot_wider(names_from = cell_type, values_from = c(mean, sd)) |> 
  select(mean_gmp, mean_hsc, sd_gmp, sd_hsc) |> 
  mutate(log2fold = log2(mean_gmp/mean_hsc)) |> 
  #using the home-made function pval
  mutate(pval = pval(mu1 = mean_gmp, mu2 = mean_hsc, n1 = 4, n2 = 4, s1 = sd_gmp, s2 = sd_hsc)) |> 
  select(protein_groups, log2fold, pval) |> 
  mutate(is_signif = case_when(pval <= 0.05 & log2fold > 0 ~ "up",
                               pval <= 0.05 & log2fold < 0 ~"down",
                               pval > 0.05 ~"not significant"
  ))


```

```{r}
library(ggrepel) 
test_plot |>
  #When are points significant? In this case if fold > 1 it is overexpressed
 # mutate(label = case_when(fold > 1 ~ protein_groups, fold < 1 ~ "")) |>
  ggplot(aes(x = log2fold, y = desc(log10(pval)), color = is_signif))+
  geom_point(size=1, alpha = 0.5)+
#  geom_text_repel(aes(label = label), size = 3)+
  theme_minimal()+
  labs(title = "Expression of GMP relative to HSC",
       x = "fold",
       y = "-log10(p)",
       caption = "proteomics data")+
  theme(legend.position = "none",
        plot.title = element_text(hjust = 1),
        plot.subtitle = element_text(hjust = 1))+
  #The horizontal line that indicates significance - remember to check if it correct with qvalue and all
  geom_hline(yintercept = 2)+
  scale_color_manual(values = c("up" = "red", "down" = "blue", "not significant" = "gray"))

#The threshold should be p value of 0.05
#Use q-value instead of pvalue 
#Sofias code for defining the color
#scale_color_manual(values = c("Down-regulated" = "blue", "Up-regulated" = "red", "NA" = "gray"))
```

```{r}
#creating a new label-variable which takes values for gene for significant genes only and otherwise leaves it as "" otherwise there would be waaaay too many (>2000) gene names 


#Would be nice if to the right of 0  they are overexpressed have one color and to the left of zero have another color for underexpressed.
#Would also be nice to have below threshold to be grey. 

# Add thresholds for significance
# Define thresholds for log2 fold change and p-value
#log2FC_threshold <- 0.5  # Example: Significant fold change > 0.5
#p_value_threshold <- -log10(0.05)  # Corresponding to p-value < 0.05

# Classify proteins as "Up-regulated", "Down-regulated", or "NA"
#df_fc <- test_plot |> 
  mutate(
    regulation = case_when(
      #If the gene is significant and upregulated 
      log2FC > log2FC_threshold & -log10(p_value) > p_value_threshold ~ "Up-regulated",
      #if the gene is significant and downregulated
      log2FC < -log2FC_threshold & -log10(p_value) > p_value_threshold ~ "Down-regulated",
      #If the gene is not significant
      TRUE ~ "NA"  # Non-significant proteins
    )
  )



```
