---
title: "Proteomics Data from Murine Blood Cells"
subtitle: "A Collaborative Data Science Project by Group 6"
editor: visual
format: 
  revealjs:
    theme: white
---

Read the following resources to become smarter on how to create presentations. Remember to have exactly 10 slides. https://quarto.org/docs/presentations/

https://quarto.org/docs/presentations/revealjs/

## Introduction to the data {.smaller}

the data is obtained by applying mass spectrometry to FACS-sorted populations of hematopoietic stem- and progenitor cells from the mouse bone marrow

five populations were isolated based on known surface marker expression: HSC, CLP, CMP, MEP, GMP

500 cells were isolated in 4 replicates, except for CLP having 5 replicates

raw data consists of LS/MS DIA intensity values of identified protein groups (PG)

| Cell Type                   | HSC  | CMP  | GMP  | CLP  | MEP  | Total |
|-----------------------------|------|------|------|------|------|-------|
| No. of observations         | 2196 | 1986 | 2291 | 2382 | 2691 | 3765  |
| No. of replicates (samples) | 4    | 4    | 4    | 5    | 4    | 21    |

: Table 1: Number of replicates and observations across replicates for the analysed FACS-populations

## Data tidying and data format

::: nonincremental
-   5 dataframes (hsc, clp, cmp, mep, gmp) into one joint dataframe using function  `full_join()` , joined by both: ProteinGroup and Genes
-   variable names are simplified
-   5 cell types making up a total of 21 variables, we used  `pivot_longer()`  to get just one intensity colomn
-   name of the cell type and number of the replica are now merged, but we want to have them in 2 different colomns
:::

## Augmenting the data

::: nonincremental
-   log2 transformation of the values (common for mass spectrometry proteomics data)

-   individual protein intensities are normalised to the median of each sample

-   intensities across the different cell types are normalized (due different to cell count)

-   missing values (detection limit of the mass spectrometer) replacing sample-wise and feature-wise

-   which plots to showcase??????
:::

## Issuses during tidyig and augmenting

::: nonincremental
-   although longer format is often preferred, we found that for calculating fold and q value (between two cell types) wider format is a better solution, q value is then simply added by using  `mutate()` .

-   even if there is an existing function for T test, we made our own, which is more adjusted to our input

-   as there is multiple possible comparisons between cell types, we decided to build a function which which as an output will have a new dataframe, with 2 cell types of interest

-   what other problems have we had? how did we solve it? why did we choose to do it in that way?
:::

## Augmenting data for principal component analysis

``` {.r style="font-size: 0.7em"}

#Pivot to wider format for principal component analysis
df_feature_wide <- df_feature_wise |>
  mutate(intensity = unname(intensity)) |>
  pivot_wider(id_cols = c(cell_type,replicate_n),
              names_from = 'protein_groups',
              values_from = 'intensity') |>
  select(where(~ !any(is.na(.)))) #Selects only columns without N/A
  

#Get numerical inputs
df_input <- df_feature_wide |> select(-c('replicate_n','cell_type'))

#Group datapoints by cell types
colourby <- pull(df_feature_wide, 'cell_type')
   
#Projecting data unto principal components (pc)
pc <- prcomp(df_input, center = FALSE, scale = FALSE)
```

## PCA Results {auto-animate="true"}

![](images/PCA_on_proteingroups_original.png){.absolute top=150 left=0 width="500" height="350"}

![](images/pca_variance_barplot.png){.absolute top=150 right=0 width="500" height="350"}

## Function

``` {.r style="font-size: 0.7em"}
volcano_augment <- function(df, later_cell, earlier_cell, n_later, n_earlier){

















  return(data_set_for_visualisation)
})
```

## Function {auto-animate="true"}

``` {.r style="font-size: 0.7em"}
volcano_augment <- function(df, later_cell, earlier_cell, n_later, n_earlier){
  data_set_for_visualisation <- df |> 
    ungroup() |> # Ungrup the data_frame to avoid miscalculations.
    select(c(protein_groups,
             !!sym(paste0("mean_", earlier_cell)), 
             !!sym(paste0("mean_", later_cell)), 
             !!sym(paste0("sd_", later_cell)), 
             !!sym(paste0("sd_", earlier_cell)))) |> 
    #!!sym() is used to evaluate the result as a column name.. 
    mutate(fold_log2 = log2(!!sym(paste0("mean_", later_cell)) /!!sym(paste0("mean_", earlier_cell))), 
           p_val = pval(!!sym(paste0("mean_", later_cell)),
                        !!sym(paste0("mean_", earlier_cell)),
                        n_later, n_earlier,
                        !!sym(paste0("sd_", later_cell)),
                        !!sym(paste0("sd_", earlier_cell))),
           q_val = (p.adjust(p_val))) |> 
    mutate(expression = case_when(fold_log2 > 0 & q_val <= 0.05 ~ "overexpressed",
                                  fold_log2 < 0 & q_val <= 0.05 ~ "underexpressed",
                                  q_val > 0.05  ~ "not significant")) |> 
    select(protein_groups, fold_log2, q_val, expression)
  return(data_set_for_visualisation)
})
```

## Volcano Plot {.smaller}

::: nonincremental
-   log2(fold) vs log10(q_values) plot is a rule of thumb in proteomics
:::

::: panel-tabset
### CMP - GMP

![](images/cmp_gmp_volcano_plot-02.png)

### CMP - MEP

![](images/cmp_mep_volcano_plot-01.png)

### HSC - CLP

![](images/hsc_clp_volcano_plot-01.png)

### HSC - CMP

![](images/hsc_cmp_volcano_plot-02.png)
:::

## Discussion

::: nonincremental
-   5 dataframes are merged into 1
-   data is cleaned and pivoted longer in order to separate cell type and number of measurment
-   data is log2 transformed and normalised
-   data is pivoted wider again in order to do the calculations between cell groups
-   results are showcased with 4 volcano plots
-   PCA shows us simmilarity between different cell types, and potentialy pathway of stem cell development
:::

## Discussion

Another Discussion slide

## Take away messages / Conclusion

Write some conclusion here
