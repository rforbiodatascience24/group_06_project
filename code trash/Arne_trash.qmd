---
title: "Arne Trash"
format: html
editor: visual
---

```{r}


## Use left-censor method to impute missing values. Work feature-wise.

# Make function and apply with dplyr::mutate()

NaIsMindet <- function(x){
  # replaces NA with 1st percentile of row values
  row_mean <- mean(x, na.rm=TRUE)
  row_sd <- sd(x, na.rm=TRUE)
  firstperc <- row_mean - 2.326 * row_sd # -2.326 is Z-score for first percentile
  x[is.na(x)] <- mean(x, na.rm=TRUE)
  return(x)
}
NaIsMindet2 <- function(x){
  # Replace NA values with the 1st percentile (calculated as row_mean - 2.326 * row_sd)
  firstperc <- mean(x, na.rm = TRUE) - 2.326 * sd(x, na.rm = TRUE)
  x[is.na(x)] <- firstperc
  return(x)
}
df_nona3 <- df_norm |> 
  rowwise() |> 
  mutate(across(.cols = -c(ProteinGroups, Genes),
                .fns = NaIsMindet2)) |> 
  ungroup()
```

```{r}

## Use left-censor method to impute missing values. Work sample-wise.

# Make function and apply with dplyr::mutate()

NaIsMindet <- function(x){
  # replaces NA with 1st percentile of column values
  col_mean <- mean(x, na.rm=TRUE)
  col_sd <- sd(x, na.rm=TRUE)
  firstperc <- col_mean - 3.090 * col_sd # -2.326 is Z-score for first percentile
  x[is.na(x)] <- firstperc
  return(x)
}

df_nona <- df_norm |> 
  mutate(across(.cols = -c(ProteinGroups, Genes),
                .fns = NaIsMindet))
```
